---
- hosts: control
  # become: yes

  tasks:
    # - name: Create the kubernetes cluster
    #   script: configure.sh
    #   register: output

    # - debug: msg="{{ output.stdout }}"

    - name: Create .kube directory
      file:
        path: /home/ubuntu/.kube
        state: directory
        mode: 0755
        owner: ubuntu
        group: ubuntu
    
    - name: Initialize the Kubernetes cluster
      become: yes
      shell: sudo kubeadm init --pod-network-cidr=192.168.0.0/24 --kubernetes-version=1.24.0 --apiserver-advertise-address=10.0.1.50 >> cluster_initialized.txt
      args:
        chdir: /home/ubuntu
        creates: cluster_initialized.txt

    # - pause: seconds=180

    - name: Copy admin.conf file to user's kube config
      shell: "sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

    - name: Change admin.conf owner
      shell: "sudo chown $(id -u):$(id -g) $HOME/.kube/config"

    - name: Check if it works
      shell: "kubectl get nodes"
      register: output

    - debug: msg="{{ output.stdout }}"
      # copy:
      #   src: /etc/kubernetes/admin.conf
      #   dest: /home/ubuntu/.kube/config
      #   remote_src: yes
      #   owner: ubuntu
      #   group: ubuntu

    # - name: Set the KUBECONFIG env variable
    #   lineinfile:
    #     path: "/home/ubuntu/.bashrc"
    #     line: export KUBECONFIG=/home/ubuntu/.kube/config

    # - pause: seconds=10

    - name: Install Pod network
      shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml >> pod_network_setup.txt
      args:
        chdir: /home/ubuntu
        creates: pod_network_setup.txt

    - name: Check if it works
      shell: "kubectl get nodes"
      register: output

    - debug: msg="{{ output.stdout }}"

    - name: Get the token for joining the worker nodes
      shell: kubeadm token create --print-join-command >> token.sh
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Copy join command to local file
      # local_action: copy content="{{ kubernetes_join_command.stdout_lines[0]}}" dest="/tmp/kubernetes_join_command" mode=0777
      fetch:
        src: token.sh
        dest: /tmp/token.sh
